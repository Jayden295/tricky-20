---
import { SignIn, SignOut } from "auth-astro/components";
import { getSession } from "auth-astro/server";
import { db, apiKeys } from "../db/schema.ts";
import { eq } from "drizzle-orm";
import BaseLayout from "../layouts/BaseLayout.astro";
import Navbar from "../components/Navbar.astro";

const session = await getSession(Astro.request);

// Get minDate and maxDate of the API key expiration
const minDate = new Date();
minDate.setDate(minDate.getDate() + 1);
const minString = minDate.toISOString().split("T")[0];

const maxDate = new Date();
maxDate.setDate(maxDate.getDate() + 365);
const maxString = maxDate.toISOString().split("T")[0];

let api_keys;
let api_key_error;
if (session) {
    if (session.user !== undefined) {
        if (session.user.id !== undefined) {
            api_keys = await db
                .select()
                .from(apiKeys)
                .where(eq(apiKeys.userId, session.user.id.toString()));
        } else {
            api_key_error = "session.user.id is undefined";
        }
    } else {
        api_key_error = "session.user is undefined";
    }
}
---

<BaseLayout title="Account">
    <noscript
        >Warning, unfortunately, for logging in, you need to turn on javascript,
        other operations should not require javascript, if they do, do not
        hesitate to file a bug report!</noscript
    >

    <Navbar />

    <SignIn>Login</SignIn>
    <SignOut>Logout</SignOut>

    <h1>Account</h1>

    <p>
        Just so you know, you don't need an account to play this game
        whatsoever, it's just used to save the puzzles you completed
    </p>

    {
        session ? (
            <tr>
                <h2>Welcome {session.user?.name}</h2>
                <form method="POST" action="/key/new">
                    <label>
                        Expiry date of the new API key:
                        <input
                            name="expireDate"
                            type="date"
                            min={minString}
                            max={maxString}
                            required
                        />
                    </label>
                    <button type="submit">Generate New API Key</button>
                </form>
                {api_keys && api_keys.length > 0 ? (
                    <table>
                        <tr>
                            <th>Your Api keys</th>
                        </tr>
                        <tr>
                            <th>First 8 characters</th>
                            <th>Creation date</th>
                            <th>Expire date</th>
                            <th>Last used date</th>
                            <th>Expired</th>
                            <th>API key actions</th>
                        </tr>
                        {api_keys.map((api_key) => (
                            <tr>
                                <th>{api_key.first8Chars}</th>
                                <th>
                                    {
                                        api_key.creationDate
                                            .toISOString()
                                            .split("T")[0]
                                    }
                                </th>
                                <th>
                                    {
                                        api_key.expireDate
                                            .toISOString()
                                            .split("T")[0]
                                    }
                                </th>
                                <th>
                                    {api_key.lastUsedDate
                                        ? api_key.lastUsedDate
                                              .toISOString()
                                              .split("T")[0]
                                        : "Never used before"}
                                </th>
                                <th>
                                    {api_key.expireDate <= new Date()
                                        ? "Yes"
                                        : "No"}
                                </th>
                                <th>
                                    <form method="POST" action="/key/revoke">
                                        <input
                                            name="apiKeyId"
                                            type="hidden"
                                            value={api_key.id}
                                            required
                                        />
                                        <button type="submit">
                                            Revoke and delete key
                                        </button>
                                    </form>
                                </th>
                            </tr>
                        ))}
                    </table>
                ) : api_key_error ? (
                    <p>
                        Failed to find API keys for your user: {api_key_error},
                        please report this as a bug with the current page URL!
                    </p>
                ) : (
                    <p>You do not have any API keys.</p>
                )}
            </tr>
        ) : (
            <p>Not logged in</p>
        )
    }

    <h2>How to authentificate using an API key for an API endpoint</h2>
    <p>Add the header: "Authorization: Bearer API_KEY_HERE"</p>
</BaseLayout>
