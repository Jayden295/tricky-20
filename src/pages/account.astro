---
import { SignIn, SignOut } from "auth-astro/components";
import { getSession } from "auth-astro/server";
import { db, apiKeys } from "../db/schema.ts";
import { eq } from "drizzle-orm";

const session = await getSession(Astro.request);

// Get minDate and maxDate of the API key expiration
const minDate = new Date();
minDate.setDate(minDate.getDate() + 1);
const minString = minDate.toISOString().split("T")[0];

const maxDate = new Date();
maxDate.setDate(maxDate.getDate() + 365);
const maxString = maxDate.toISOString().split("T")[0];

let api_keys;
let api_key_error;
if (session) {
    if (session.user !== undefined) {
        if (session.user.id !== undefined) {
            api_keys = await db
                .select()
                .from(apiKeys)
                .where(eq(apiKeys.userId, session.user.id.toString()));
        } else {
            api_key_error = "session.user.id is undefined";
        }
    } else {
        api_key_error = "session.user is undefined";
    }
}
---

<html>
    <body>
        <noscript
            >Warning, unfortunately, for logging in, you need to turn on
            javascript, other operations should not require javascript, if they
            do, do not hesitate to file a bug report!</noscript
        >

        <SignIn>Login</SignIn>
        <SignOut>Logout</SignOut>

        {
            session ? (
                <tr>
                    <p>Welcome {session.user?.name}</p>
                    <form method="POST" action="/key/new">
                        <label>
                            Expiry date of the new API key:
                            <input
                                name="expireDate"
                                type="date"
                                min={minString}
                                max={maxString}
                                required
                            />
                        </label>
                        <button type="submit">Generate New API Key</button>
                    </form>
                    {api_keys && api_keys.length > 0 ? (
                        <table>
                            <tr>
                                <th>Your Api keys</th>
                            </tr>
                            <tr>
                                <th>First 8 characters</th>
                                <th>Creation date</th>
                                <th>Expire date</th>
                                <th>Last used date</th>
                                <th>Expired</th>
                                <th>API key actions</th>
                            </tr>
                            {api_keys.map((api_key) => (
                                <tr>
                                    <th>{api_key.first8Chars}</th>
                                    <th>
                                        {
                                            api_key.creationDate
                                                .toISOString()
                                                .split("T")[0]
                                        }
                                    </th>
                                    <th>
                                        {
                                            api_key.expireDate
                                                .toISOString()
                                                .split("T")[0]
                                        }
                                    </th>
                                    <th>
                                        {api_key.lastUsedDate
                                            ? api_key.lastUsedDate
                                                  .toISOString()
                                                  .split("T")[0]
                                            : "Never used before"}
                                    </th>
                                    <th>
                                        {api_key.expireDate <= new Date()
                                            ? "Yes"
                                            : "No"}
                                    </th>
                                    <th>
                                        <form
                                            method="POST"
                                            action="/key/revoke"
                                        >
                                            <input
                                                name="apiKeyId"
                                                type="hidden"
                                                value={api_key.id}
                                                required
                                            />
                                            <button type="submit">
                                                Revoke and delete key
                                            </button>
                                        </form>
                                    </th>
                                </tr>
                            ))}
                        </table>
                    ) : api_key_error ? (
                        <p>
                            Failed to find API keys for your user:{" "}
                            {api_key_error}, please report this as a bug with
                            the current page URL!
                        </p>
                    ) : (
                        <p>You do not have any API keys.</p>
                    )}
                </tr>
            ) : (
                <p>Not logged in</p>
            )
        }
    </body>
</html>
